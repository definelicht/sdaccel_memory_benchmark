/// @author    Johannes de Fine Licht (johannes.definelicht@inf.ethz.ch)
/// @date      May 2017 
/// @copyright This software is copyrighted under the BSD 3-Clause License. 

#pragma once

#include <cstddef>
#include <ap_int.h>

constexpr int kMemorySize = ${BENCHMARK_MEMORY_SIZE};
constexpr int kPortWidth = ${BENCHMARK_PORT_WIDTH};
constexpr int kBufferDepth = ${BENCHMARK_BUFFER_DEPTH};
constexpr int kDimms = ${BENCHMARK_DIMMS};
using Data_t = ap_uint<kPortWidth>;

extern "C" {

void ReadWriteTwoDimms(Data_t const *in, Data_t *out,
                       const unsigned burst_length,
                       const unsigned burst_count,
                       const unsigned gap); 

void ReadWriteFourDimms(Data_t const *in0, Data_t *out0,
                        Data_t const *in1, Data_t *out1,
                        const unsigned burst_length,
                        const unsigned burst_count,
                        const unsigned gap); 

void ReadFourDimms(Data_t const *in0, Data_t const *in1,
                   Data_t const *in2, Data_t const *in3,
                   Data_t *out,
                   const unsigned burst_length,
                   const unsigned burst_count,
                   const unsigned gap); 

void ReadTwoDimms(Data_t const *in0, Data_t const *in1,
                  Data_t *out,
                  const unsigned burst_length,
                  const unsigned burst_count,
                  const unsigned gap); 

void WriteFourDimms(Data_t *out0, Data_t *out1,
                    Data_t *out2, Data_t *out3,
                    const unsigned burst_length,
                    const unsigned burst_count,
                    const unsigned gap);

void WriteTwoDimms(Data_t *out0, Data_t *out1,
                   const unsigned burst_length,
                   const unsigned burst_count,
                   const unsigned gap);

}
